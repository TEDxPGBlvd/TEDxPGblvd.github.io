{"version":3,"sources":["Assets/TED Youth Logo.jpg","Assets/doterra-wellness-advocate-white.png","Assets/TEDx_logo_sidebar.png","Assets/Blank-Profile-Picture.jpg","Components/Sidebar.js","Components/Landing.js","Components/Speakers.js","Components/Firebase/Firebase.js","Components/Tickets.js","Components/Confirmation.js","Components/Schedule.js","Components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Sidebar","props","sidebarData","className","id","this","eventName","src","image","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","smooth","Component","Landing","landingData","tedxname","style","maxWidth","textDecoration","href","doterraDirections","color","fontSize","eventDate","icon","faMapMarkerAlt","doterra","height","tedxplanation","tedxplanation2","faAngleDown","Experience","speakers","map","speaker","index","profile","name","title","company","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Tickets","updateInput","e","setState","target","value","console","log","state","addRegistrant","preventDefault","stopPropagation","firestore","collection","add","fullname","email","firstName","lastName","TextField","label","amount","onSuccess","details","data","alert","payer","given_name","Confirmation","experience","Contact","alignSelf","App","profileData","landing","education","skills","interests","projects","path","Speakers","Schedule","Boolean","window","location","hostname","match","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0e237d5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TED Youth Logo.f927efa1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/doterra-wellness-advocate-white.b367b66e.png\";","module.exports = __webpack_public_path__ + \"static/media/TEDx_logo_sidebar.ff703c4d.png\";","module.exports = __webpack_public_path__ + \"static/media/Blank-Profile-Picture.a1ee044c.jpg\";","import React, {Component} from 'react';\nimport image from '../Assets/TEDx_logo_sidebar.png';\nimport { Link } from \"react-scroll\";\n\n\nclass Sidebar extends Component {\n    constructor(props){\n        super(props);\n        this.sidebarData = props.sidebarData;\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light fixed-top shadow-sm\" id=\"sideNav\">\n                <div className=\"navbar-brand js-scroll-trigger\">\n                    <span className=\"d-block d-lg-none\">{this.sidebarData.eventName}</span>\n                    <span className=\"d-none d-lg-block\">\n            <img className=\"img-fluid img-profile mx-auto mb-2\" src={image} alt=\"\"/>\n          {/*  TODO make image transparent*/}\n          </span>\n                </div>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"/>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"about\" smooth={true}>About</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"speakers\" smooth={true}>Speakers</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"tickets\" smooth={true}>Tickets</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"skills\" smooth={true}>Schedule</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"projects\" smooth={true}>Contact</Link>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Sidebar;\n","import React, {Component} from 'react';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faAngleDown, faMapMarkerAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-scroll\";\nimport tedxname from \"../Assets/TED Youth Logo.jpg\"\nimport doterra from \"../Assets/doterra-wellness-advocate-white.png\"\n\nclass Landing extends Component {\n    constructor(props){\n        super(props);\n        this.landingData = props.landingData;\n    }\n    render() {\n        return (\n            <section className=\"resume-section p-3 p-lg-5 d-flex align-items-center\" id=\"about\">\n                <div className=\"w-100\">\n                    <img src={tedxname} style={{maxWidth: \"100%\"}} alt=\"TEDx PleasantGroveBlvd\"/>\n                    <a style={{textDecoration: 'none'}} href={this.landingData.doterraDirections}>\n                        <div className=\"pl-4 mt-1\">\n                            <p style={{color: \"white\", fontSize: \"20px\"}}>\n                                {this.landingData.eventDate}<br/>\n                                <FontAwesomeIcon icon={faMapMarkerAlt} color={\"white\"} className=\"mr-1\"/> Hosted by <img src={doterra} alt={\"doterra logo\"} height={15}/>\n                            </p>\n                        </div>\n                    </a>\n                    <h4 className=\"pt-5 pl-4\" style={{color: \"white\"}}>What is TEDx?</h4>\n                    <p className=\"lead pl-4 mt-3\">{this.landingData.tedxplanation}<br/>{this.landingData.tedxplanation2}</p>\n                    <br/>\n                    <br/>\n                    {/*<br/>*/}\n                    <br/>\n                    {/*<br/>*/}\n                    <div className=\" pl-4 scroll-button\">\n                        <Link\n                            to=\"speakers\"\n                            smooth={true}\n                        ><a><FontAwesomeIcon icon={faAngleDown}/></a>\n                        </Link>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Landing;","import React, { Component } from 'react';\nimport profile from '../Assets/Blank-Profile-Picture.jpg'\n\nclass Experience extends Component {\n    constructor(props) {\n        super(props);\n\n        this.speakers = props.speakers;\n    }\n\n    render() {\n        return(\n            <section className=\"resume-section p-3 p-lg-5 d-flex justify-content-center\" id=\"speakers\">\n                <div className=\"w-100\">\n                    <h2 className=\"mb-5\" style={{color: \"white\"}}>Speakers</h2>\n                    <div className=\"\">\n                        {\n                            this.speakers.map((speaker, index) => (\n                                <div className=\"card mb-3\" style={{maxWidth: \"90% !important\"}}>\n                                    <div className=\"media\">\n                                        <img src={profile} height={80} className=\"mr-3\" alt={speaker.name}/>\n                                        <div className=\"media-body\">\n                                            <h3 className=\"speakerTitle\">{speaker.title}</h3>\n                                            <p className=\"card-title\">{speaker.name}, {speaker.company}</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            ))\n                        }\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Experience;\n","import firebase from \"firebase\";\n\nconst config = {\n    apiKey: \"AIzaSyDHUevy-iQN2qbNWhi73URjKbj-UpDEWkQ\",\n    authDomain: \"tedxpgyouth.firebaseapp.com\",\n    databaseURL: \"https://tedxpgyouth.firebaseio.com\",\n    projectId: \"tedxpgyouth\",\n    storageBucket: \"tedxpgyouth.appspot.com\",\n    messagingSenderId: \"178491429001\",\n    appId: \"1:178491429001:web:042ba6b441a9a7b8f37658\"\n};\nfirebase.initializeApp(config);\n\nexport default firebase;","import React, { Component } from 'react';\nimport firebase from \"./Firebase/Firebase\";\nimport {PayPalButton} from \"react-paypal-button-v2\";\nimport {TextField} from \"@material-ui/core\";\n\nclass Tickets extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            fullname: \"\",\n            firstName: \"\",\n            lastName: \"\"\n        };\n        this.speakers = props.speakers;\n    }\n\n    updateInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n        console.log(this.state);\n    };\n\n    addRegistrant = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const db = firebase.firestore();\n        const registrantsRef = db.collection(\"registrants\").add({\n            name: this.state.fullname,\n            email: this.state.email\n        });\n        this.setState({\n            fullname: \"\",\n            email: \"\"\n        });\n    };\n\n    render() {\n        return(\n            <section className=\"resume-section p-3 p-lg-5 d-flex justify-content-center\" id=\"tickets\">\n                <div className=\"w-100\">\n                    <h2 className=\"mb-5\" style={{color: \"white\"}}>Tickets</h2>\n                    <div className=\"card payment pl-4 pr-4 pt-2\">\n                        <TextField\n                        label=\"First Name\"\n                        value={this.state.firstName}/>\n                        <TextField\n                        label=\"Last Name\"\n                        value={this.state.lastName}/>\n                        <TextField className=\"pb-4\"\n                        label=\"What email address would you like us to send your ticket to?\"\n                        value={this.state.email}/>\n\n                        <PayPalButton\n                            amount=\"15.00\"\n                            onSuccess={(details, data) => {\n                                alert(\"Transaction completed by \" + details.payer.name.given_name);\n                                console.log(details, data);\n                                // return fetch(\"/paypal-transaction-complete\", {\n                                //     method: \"post\",\n                                //     body: JSON.stringify({\n                                //         orderID: data.orderID\n                                //     })\n                                // })\n                            }}\n                            // options={{clientId: \"AWeU8fCHG3v2moutgRxBY50XeKoCVEYHQh1vaVPP9ZjkpL-v_rfSTMXA_4pjQJjr_RkWj-Z-YDcT3OCh\"}}\n\n                        />\n                    </div>\n                </div>\n                {/*<form onSubmit={this.addRegistrant}>*/}\n                {/*    <input*/}\n                {/*        type=\"text\"*/}\n                {/*        name=\"fullname\"*/}\n                {/*        placeholder=\"Name\"*/}\n                {/*        onChange={this.updateInput}*/}\n                {/*        value={this.state.fullname}*/}\n                {/*    />*/}\n                {/*    <input*/}\n                {/*        type=\"email\"*/}\n                {/*        name=\"email\"*/}\n                {/*        placeholder=\"Email\"*/}\n                {/*        onChange={this.updateInput}*/}\n                {/*        value={this.state.email}*/}\n                {/*    />*/}\n                {/*    <button type=\"submit\">Submit</button>*/}\n                {/*</form>*/}\n\n            </section>\n        );\n    }\n}\n\nexport default Tickets;\n","import React, { Component } from 'react';\nimport tedxname from \"../Assets/TED Youth Logo.jpg\";\n\nclass Confirmation extends Component {\n    constructor(props) {\n        super(props);\n\n        this.experience = props.experience;\n    }\n\n    render() {\n        return(\n                <div className=\"w-100 mt-5\">\n                    <img src={tedxname} style={{maxWidth: \"70%\"}} alt=\"TEDx PleasantGroveBlvd\"/>\n                    <h2 className=\"mt-0\">Thanks for buying a ticket!</h2>\n                    <p>To purchase another, click here</p>\n\n                </div>\n        );\n    }\n}\n\nexport default Confirmation;\n","import React, { Component } from 'react';\nimport firebase from \"./Firebase/Firebase\";\nimport {PayPalButton} from \"react-paypal-button-v2\";\nimport {TextField} from \"@material-ui/core\";\n\nclass Experience extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <section className=\"resume-section p-3 p-lg-5 d-flex justify-content-center\" id=\"schedule\">\n                <div className=\"w-100\">\n                    <h2 className=\"mb-5\" style={{color: \"white\"}}>Schedule</h2>\n                    <div className=\"card pb-5 pt-5 mb-5\">\n\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Experience;\n","import React, { Component } from 'react';\nimport doterra from \"../Assets/doterra-wellness-advocate-white.png\"\n\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <div>\n            <section className=\"resume-section p-3 p-lg-5 d-flex justify-content-center\" id=\"schedule\">\n                <div className=\"w-100\">\n                    <h2 className=\"mb-5\" style={{color: \"white\"}}>Contact</h2>\n                    <div className=\"card pb-5 pt-5 mb-5\">\n\n                    </div>\n                    <div className=\"pb-5\" >\n                        <h2 className=\"mb-5\" style={{color: \"white\"}}>Sponsors</h2>\n                        <img src={doterra} height={60} alt=\"doterra\"/>\n                    </div>\n                    <div style={{alignSelf: 'flex-end'}}>\n                        <p className=\"mb-5\" style={{color: \"white\"}}>This independent TEDx event is operated under license from TED.</p>\n\n                    </div>\n                </div>\n            </section>\n            </div>\n        );\n    }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport profileData from './informationData.json';\nimport Sidebar from \"./Components/Sidebar\";\nimport Landing from \"./Components/Landing\";\nimport Speakers from \"./Components/Speakers\";\nimport Tickets from \"./Components/Tickets\";\nimport {\n  BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport Confirmation from \"./Components/Confirmation\";\nimport './App.css';\nimport Schedule from \"./Components/Schedule\";\nimport Contact from \"./Components/Contact\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      landingData : profileData.landing,\n      experience : profileData.experience,\n      education : profileData.education,\n      skills : profileData.skills,\n      interests : profileData.interests,\n      projects : profileData.projects,\n      speakers: profileData.speakers\n    }\n  }\n  render() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/confirmation\">\n                    <Confirmation/>\n                </Route>\n                <Route path=\"/\">\n                <div className=\"App\">\n                    <Sidebar sidebarData={this.state.landingData}/>\n                    <div className=\"container-fluid p-0\">\n                        <Landing landingData={this.state.landingData}/>\n                        <hr className=\"m-0\"/>\n                        {/*Speakers*/}\n                        <Speakers speakers={this.state.speakers}/>\n                        {/*<Experience experience={this.state.experience}/>*/}\n                        <hr className=\"m-0\"/>\n                        {/*Tickets*/}\n                        <Tickets/>\n                        <hr className=\"m-0\"/>\n                        {/*Schedule*/}\n                        <Schedule/>\n                        <hr className=\"m-0\"/>\n                        {/*Contact Info*/}\n                        <Contact/>\n                        <hr className=\"m-0\"/>\n                        {/*Sponsors*/}\n                        {/*Footer*/}\n                    </div>\n                </div>\n            </Route>\n            </Switch>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import Firebase, { FirebaseContext } from './components/Firebase';\nimport * as serviceWorker from './serviceWorker';\n\nif(document.getElementById('root')){\n    ReactDOM.render(\n            <App />\n        // </FirebaseContext.Provider>\n    ,document.getElementById('root'));\n}\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}